Задача 1: 100% (Пример за интерфейс) да се създадат:
a) интерфейс Машина, (IMachine) който да позволява включване на захранването, изключване на захранването и започване на работа;
b) клас Кола (Car), който имплементира методите на интерфейса Машина;
c) клас Камион (Truck), който имплементира методите на интерфейса Машина;
d) тестов клас MachineTest, в който да се тестват класовете с различни входни данни


Задача 2: 100% (разширение и модифицирана задача 1)
a) да се създаде интерфейс „Жажда скорости”, (INeed4Speed), който да позволява следните операции: 
	- включване на захранването (powerOn), 
	- изключване на захранването (powerOff) и ускоряване на скоростта с определена стъпка (speedUp),
	- намаляване на скоростта с определена стъпка (breaks()), изпреварване (overtake);
	- пренапишете метод toString, който да изписва „Кола марка Ситроен ZX” 
	(като марката се взема от вътрешно поле brand, а за камион аналогично 
	„Камион марка ...” и отново марката се взема от вътрешно поле brand;
b) да се създаде клас Кола (Car), който имплементира методите на интерфейса машина; 
	- (за самостоятелна работа може да се напише клас Ferrari, който при опит да се запали, да изписва, че не пали); 
	!!!Това (Ferrari) не е нправено. Не би трябвало да има такъв клас, !!!
	!!!а по скоро да е инстанция.!!!
	- В колата да има допълнителен метод „премигни с фаровете” (flashLights), в който се извежда съобщение „колата...премигна с фарове”
c) да се създаде клас Камион (Truck), който имплементира методите на интерфейса Машина; 
	В колата да има допълнителен метод „свирни с клаксон” (makeSomeNoise), 
	в който се извежда съобщение „камион свирна оглушително”
d) Да се създаде тестов клас MachineTest, в който да се тестват класовете с различни входни данни 


Задача 2 100% (за самостоятелна работа):
Дефинирайте подобен интерфейс Computable за класа компютър, и го имплементирайте в клас Компютър,
	като добавите методи startup,shutdown и compute.


Задача 3 100% (За работа в час!!):
	- заредете примерният код даден към упражнението и го стартирайте 
	- Напишете класовете Point, Line, Rectangle, Circle (със характеристики център и радиус). 
	- Декларирайте интерфейс IDrawable с метод 
		public abstract void drawIt(java.awt.Graphics g);
	- Имплементирайте интерфейса в трите класа.
	- Да се МОДИФИЦИРА приложения код (ако има приложен такъв), с цел да може да се изчертават обекти от тип 
		Circle, Line и Rectangle. 

100% Задача за клас Point и класа Line
Нека имаме класа Point (с полета x, y и label). 
Да се създаде клас Line, наследник на класа Point със два атрибута 
	– начална точка (наследена от класа Point) 
	- крайна точка(startPoint и endPoint). 
	Нека началната точка да е с координати – наследената точка (достъп до нея става чрез референцията super), 
	а крайната точка да се дефинира като нова точка endPoint. 
	(забележка: създаването на клас Line по този начин цели да упражни концепциите за наследяване, 
	а не за реалното му използване).


100% Задача за клас Rectangle
	Да се направи клас, представляващ правоъгълник (Rectangle), 
	който наследява класа Точка (Point) и има две допълнителни характеристики 
	– широчина и височина (width и height). 
	Да се напишат допълнително метод, който връща лицето на правоъгълника.


100% Задача за клас Circle
	Да се напише клас Кръг (Circle) 
	- с трите вида конструктори, 
	- метод toString, 
	- със стартова точка – от тип класа Точка (Point) 
	- център (centerPoint) и 
	- радиус (radius). 
	- Да се напишат методи за достъп. 
	- Да се напише метод, който връща лицето на кръга.
	
	
100% (За самостоятелна работа)
	Да се направи тестов клас GeometryTest, който да 
	- създава по няколко различни обекта от класовете Point, Rectangle, Circle, Line и 
	- да извежда наличната информация за всяка от тях (координати, дължина, лице).
