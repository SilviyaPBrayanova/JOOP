Задача 1: 95%
a) клас, който моделира Човек (Person)
	- name от тип String, или 
	- firstName, middleName, 
	- lastName – за всяко име по отделно поле), 
	- пол (boolean male = true -> за мъж и false – за жена), 
	- рождена дата (dayOfBirth - short, monthOfBirth, yearOfBirth), ;
b) клас Студент – наследник на човек, т.е. има име и 
	- факултетен номер
	- курс
	- специалност
c) Да се създадат двата класа: три вида конструктори, метод toString и методи за достъп.
d) Да се създаде метод showInfo() , който да връща символен низ като за
обектите от класа Човек да изписва „Човек с име …, пол, възраст, роден на …дата”
е) Да се създаде метод showInfo() , който да връща символен низ за двата класа,
като за обектите от класа Студент да изписва „Човек с име …, пол, възраст, роден на
…дата и студент в … университет с факултетен номер …”
f) Да се напише метод, който връща броя на дните до следващия рожден ден, по
зададена дата (ден-месец-година); int nextBirthday(int currentDay, int currentDay, int
currentYear). (Забележка: годината трябва за да се отчете дали е високосна или
не.) - !!!Това не е направено!!!

g) Да се създаде тестов клас StudentPersonTest, в който да се тестват класовете с
различни входни данни (да се създадат по 3 обекта от всеки клас – съответне Person и
Student (person1, person2, person3 и съответно student1, student2 и student3).

Задача 2: 100%
Нека имаме класа Point (с полета x, y и label). Да се създаде клас Line, наследник на
класа Point с два атрибута – начална точка (наследена от класа Point) и крайна точка
(startPoint и endPoint). Нека началната точка да е с координати – наследената точка, а
крайната точка да се дефинира. Класа да се дефинира с трите вида конструктори,
методи за достъп, метод toString и метод int compare(Line line), който връща -1 ако
текущата линия е по къса, 0 ако двете линии са с еднаква дължина и 1 ако текущата
линия е по дълга.
Да се направи тестов клас LineTest, който да създава 3 обекта от тип Line и да ги
сравнява, като изписва кой от тях е по дълъг.

Задача 3: 100%
Да се направи клас, представляващ правоъгълник (Rectangle), който
наследява класа Точка (Point) и има две допълнителни характеристики – широчина и
височина (width и height). Да се напишат допълнително метод, който връща лицето на
правоъгълника.